#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with SymPy 1.12                       *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_4952847842636845307) {
   out_4952847842636845307[0] = 0;
   out_4952847842636845307[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_4952847842636845307[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_4952847842636845307[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_4952847842636845307[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_4952847842636845307[5] = -sin(in_vec[1]);
   out_4952847842636845307[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4952847842636845307[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4952847842636845307[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_4952847842636845307[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_4952847842636845307[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_4952847842636845307[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_4952847842636845307[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4952847842636845307[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4952847842636845307[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_4952847842636845307[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_4952847842636845307[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_4952847842636845307[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7174874578269485343) {
   out_7174874578269485343[0] = delta_x[0] + nom_x[0];
   out_7174874578269485343[1] = delta_x[1] + nom_x[1];
   out_7174874578269485343[2] = delta_x[2] + nom_x[2];
   out_7174874578269485343[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7174874578269485343[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7174874578269485343[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7174874578269485343[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7174874578269485343[7] = delta_x[6] + nom_x[7];
   out_7174874578269485343[8] = delta_x[7] + nom_x[8];
   out_7174874578269485343[9] = delta_x[8] + nom_x[9];
   out_7174874578269485343[10] = delta_x[9] + nom_x[10];
   out_7174874578269485343[11] = delta_x[10] + nom_x[11];
   out_7174874578269485343[12] = delta_x[11] + nom_x[12];
   out_7174874578269485343[13] = delta_x[12] + nom_x[13];
   out_7174874578269485343[14] = delta_x[13] + nom_x[14];
   out_7174874578269485343[15] = delta_x[14] + nom_x[15];
   out_7174874578269485343[16] = delta_x[15] + nom_x[16];
   out_7174874578269485343[17] = delta_x[16] + nom_x[17];
   out_7174874578269485343[18] = delta_x[17] + nom_x[18];
   out_7174874578269485343[19] = delta_x[18] + nom_x[19];
   out_7174874578269485343[20] = delta_x[19] + nom_x[20];
   out_7174874578269485343[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_2815856922138082094) {
   out_2815856922138082094[0] = -nom_x[0] + true_x[0];
   out_2815856922138082094[1] = -nom_x[1] + true_x[1];
   out_2815856922138082094[2] = -nom_x[2] + true_x[2];
   out_2815856922138082094[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_2815856922138082094[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_2815856922138082094[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_2815856922138082094[6] = -nom_x[7] + true_x[7];
   out_2815856922138082094[7] = -nom_x[8] + true_x[8];
   out_2815856922138082094[8] = -nom_x[9] + true_x[9];
   out_2815856922138082094[9] = -nom_x[10] + true_x[10];
   out_2815856922138082094[10] = -nom_x[11] + true_x[11];
   out_2815856922138082094[11] = -nom_x[12] + true_x[12];
   out_2815856922138082094[12] = -nom_x[13] + true_x[13];
   out_2815856922138082094[13] = -nom_x[14] + true_x[14];
   out_2815856922138082094[14] = -nom_x[15] + true_x[15];
   out_2815856922138082094[15] = -nom_x[16] + true_x[16];
   out_2815856922138082094[16] = -nom_x[17] + true_x[17];
   out_2815856922138082094[17] = -nom_x[18] + true_x[18];
   out_2815856922138082094[18] = -nom_x[19] + true_x[19];
   out_2815856922138082094[19] = -nom_x[20] + true_x[20];
   out_2815856922138082094[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_6996944131011363031) {
   out_6996944131011363031[0] = 1.0;
   out_6996944131011363031[1] = 0;
   out_6996944131011363031[2] = 0;
   out_6996944131011363031[3] = 0;
   out_6996944131011363031[4] = 0;
   out_6996944131011363031[5] = 0;
   out_6996944131011363031[6] = 0;
   out_6996944131011363031[7] = 0;
   out_6996944131011363031[8] = 0;
   out_6996944131011363031[9] = 0;
   out_6996944131011363031[10] = 0;
   out_6996944131011363031[11] = 0;
   out_6996944131011363031[12] = 0;
   out_6996944131011363031[13] = 0;
   out_6996944131011363031[14] = 0;
   out_6996944131011363031[15] = 0;
   out_6996944131011363031[16] = 0;
   out_6996944131011363031[17] = 0;
   out_6996944131011363031[18] = 0;
   out_6996944131011363031[19] = 0;
   out_6996944131011363031[20] = 0;
   out_6996944131011363031[21] = 0;
   out_6996944131011363031[22] = 1.0;
   out_6996944131011363031[23] = 0;
   out_6996944131011363031[24] = 0;
   out_6996944131011363031[25] = 0;
   out_6996944131011363031[26] = 0;
   out_6996944131011363031[27] = 0;
   out_6996944131011363031[28] = 0;
   out_6996944131011363031[29] = 0;
   out_6996944131011363031[30] = 0;
   out_6996944131011363031[31] = 0;
   out_6996944131011363031[32] = 0;
   out_6996944131011363031[33] = 0;
   out_6996944131011363031[34] = 0;
   out_6996944131011363031[35] = 0;
   out_6996944131011363031[36] = 0;
   out_6996944131011363031[37] = 0;
   out_6996944131011363031[38] = 0;
   out_6996944131011363031[39] = 0;
   out_6996944131011363031[40] = 0;
   out_6996944131011363031[41] = 0;
   out_6996944131011363031[42] = 0;
   out_6996944131011363031[43] = 0;
   out_6996944131011363031[44] = 1.0;
   out_6996944131011363031[45] = 0;
   out_6996944131011363031[46] = 0;
   out_6996944131011363031[47] = 0;
   out_6996944131011363031[48] = 0;
   out_6996944131011363031[49] = 0;
   out_6996944131011363031[50] = 0;
   out_6996944131011363031[51] = 0;
   out_6996944131011363031[52] = 0;
   out_6996944131011363031[53] = 0;
   out_6996944131011363031[54] = 0;
   out_6996944131011363031[55] = 0;
   out_6996944131011363031[56] = 0;
   out_6996944131011363031[57] = 0;
   out_6996944131011363031[58] = 0;
   out_6996944131011363031[59] = 0;
   out_6996944131011363031[60] = 0;
   out_6996944131011363031[61] = 0;
   out_6996944131011363031[62] = 0;
   out_6996944131011363031[63] = 0;
   out_6996944131011363031[64] = 0;
   out_6996944131011363031[65] = 0;
   out_6996944131011363031[66] = -0.5*state[4];
   out_6996944131011363031[67] = -0.5*state[5];
   out_6996944131011363031[68] = -0.5*state[6];
   out_6996944131011363031[69] = 0;
   out_6996944131011363031[70] = 0;
   out_6996944131011363031[71] = 0;
   out_6996944131011363031[72] = 0;
   out_6996944131011363031[73] = 0;
   out_6996944131011363031[74] = 0;
   out_6996944131011363031[75] = 0;
   out_6996944131011363031[76] = 0;
   out_6996944131011363031[77] = 0;
   out_6996944131011363031[78] = 0;
   out_6996944131011363031[79] = 0;
   out_6996944131011363031[80] = 0;
   out_6996944131011363031[81] = 0;
   out_6996944131011363031[82] = 0;
   out_6996944131011363031[83] = 0;
   out_6996944131011363031[84] = 0;
   out_6996944131011363031[85] = 0;
   out_6996944131011363031[86] = 0;
   out_6996944131011363031[87] = 0.5*state[3];
   out_6996944131011363031[88] = 0.5*state[6];
   out_6996944131011363031[89] = -0.5*state[5];
   out_6996944131011363031[90] = 0;
   out_6996944131011363031[91] = 0;
   out_6996944131011363031[92] = 0;
   out_6996944131011363031[93] = 0;
   out_6996944131011363031[94] = 0;
   out_6996944131011363031[95] = 0;
   out_6996944131011363031[96] = 0;
   out_6996944131011363031[97] = 0;
   out_6996944131011363031[98] = 0;
   out_6996944131011363031[99] = 0;
   out_6996944131011363031[100] = 0;
   out_6996944131011363031[101] = 0;
   out_6996944131011363031[102] = 0;
   out_6996944131011363031[103] = 0;
   out_6996944131011363031[104] = 0;
   out_6996944131011363031[105] = 0;
   out_6996944131011363031[106] = 0;
   out_6996944131011363031[107] = 0;
   out_6996944131011363031[108] = -0.5*state[6];
   out_6996944131011363031[109] = 0.5*state[3];
   out_6996944131011363031[110] = 0.5*state[4];
   out_6996944131011363031[111] = 0;
   out_6996944131011363031[112] = 0;
   out_6996944131011363031[113] = 0;
   out_6996944131011363031[114] = 0;
   out_6996944131011363031[115] = 0;
   out_6996944131011363031[116] = 0;
   out_6996944131011363031[117] = 0;
   out_6996944131011363031[118] = 0;
   out_6996944131011363031[119] = 0;
   out_6996944131011363031[120] = 0;
   out_6996944131011363031[121] = 0;
   out_6996944131011363031[122] = 0;
   out_6996944131011363031[123] = 0;
   out_6996944131011363031[124] = 0;
   out_6996944131011363031[125] = 0;
   out_6996944131011363031[126] = 0;
   out_6996944131011363031[127] = 0;
   out_6996944131011363031[128] = 0;
   out_6996944131011363031[129] = 0.5*state[5];
   out_6996944131011363031[130] = -0.5*state[4];
   out_6996944131011363031[131] = 0.5*state[3];
   out_6996944131011363031[132] = 0;
   out_6996944131011363031[133] = 0;
   out_6996944131011363031[134] = 0;
   out_6996944131011363031[135] = 0;
   out_6996944131011363031[136] = 0;
   out_6996944131011363031[137] = 0;
   out_6996944131011363031[138] = 0;
   out_6996944131011363031[139] = 0;
   out_6996944131011363031[140] = 0;
   out_6996944131011363031[141] = 0;
   out_6996944131011363031[142] = 0;
   out_6996944131011363031[143] = 0;
   out_6996944131011363031[144] = 0;
   out_6996944131011363031[145] = 0;
   out_6996944131011363031[146] = 0;
   out_6996944131011363031[147] = 0;
   out_6996944131011363031[148] = 0;
   out_6996944131011363031[149] = 0;
   out_6996944131011363031[150] = 0;
   out_6996944131011363031[151] = 0;
   out_6996944131011363031[152] = 0;
   out_6996944131011363031[153] = 1.0;
   out_6996944131011363031[154] = 0;
   out_6996944131011363031[155] = 0;
   out_6996944131011363031[156] = 0;
   out_6996944131011363031[157] = 0;
   out_6996944131011363031[158] = 0;
   out_6996944131011363031[159] = 0;
   out_6996944131011363031[160] = 0;
   out_6996944131011363031[161] = 0;
   out_6996944131011363031[162] = 0;
   out_6996944131011363031[163] = 0;
   out_6996944131011363031[164] = 0;
   out_6996944131011363031[165] = 0;
   out_6996944131011363031[166] = 0;
   out_6996944131011363031[167] = 0;
   out_6996944131011363031[168] = 0;
   out_6996944131011363031[169] = 0;
   out_6996944131011363031[170] = 0;
   out_6996944131011363031[171] = 0;
   out_6996944131011363031[172] = 0;
   out_6996944131011363031[173] = 0;
   out_6996944131011363031[174] = 0;
   out_6996944131011363031[175] = 1.0;
   out_6996944131011363031[176] = 0;
   out_6996944131011363031[177] = 0;
   out_6996944131011363031[178] = 0;
   out_6996944131011363031[179] = 0;
   out_6996944131011363031[180] = 0;
   out_6996944131011363031[181] = 0;
   out_6996944131011363031[182] = 0;
   out_6996944131011363031[183] = 0;
   out_6996944131011363031[184] = 0;
   out_6996944131011363031[185] = 0;
   out_6996944131011363031[186] = 0;
   out_6996944131011363031[187] = 0;
   out_6996944131011363031[188] = 0;
   out_6996944131011363031[189] = 0;
   out_6996944131011363031[190] = 0;
   out_6996944131011363031[191] = 0;
   out_6996944131011363031[192] = 0;
   out_6996944131011363031[193] = 0;
   out_6996944131011363031[194] = 0;
   out_6996944131011363031[195] = 0;
   out_6996944131011363031[196] = 0;
   out_6996944131011363031[197] = 1.0;
   out_6996944131011363031[198] = 0;
   out_6996944131011363031[199] = 0;
   out_6996944131011363031[200] = 0;
   out_6996944131011363031[201] = 0;
   out_6996944131011363031[202] = 0;
   out_6996944131011363031[203] = 0;
   out_6996944131011363031[204] = 0;
   out_6996944131011363031[205] = 0;
   out_6996944131011363031[206] = 0;
   out_6996944131011363031[207] = 0;
   out_6996944131011363031[208] = 0;
   out_6996944131011363031[209] = 0;
   out_6996944131011363031[210] = 0;
   out_6996944131011363031[211] = 0;
   out_6996944131011363031[212] = 0;
   out_6996944131011363031[213] = 0;
   out_6996944131011363031[214] = 0;
   out_6996944131011363031[215] = 0;
   out_6996944131011363031[216] = 0;
   out_6996944131011363031[217] = 0;
   out_6996944131011363031[218] = 0;
   out_6996944131011363031[219] = 1.0;
   out_6996944131011363031[220] = 0;
   out_6996944131011363031[221] = 0;
   out_6996944131011363031[222] = 0;
   out_6996944131011363031[223] = 0;
   out_6996944131011363031[224] = 0;
   out_6996944131011363031[225] = 0;
   out_6996944131011363031[226] = 0;
   out_6996944131011363031[227] = 0;
   out_6996944131011363031[228] = 0;
   out_6996944131011363031[229] = 0;
   out_6996944131011363031[230] = 0;
   out_6996944131011363031[231] = 0;
   out_6996944131011363031[232] = 0;
   out_6996944131011363031[233] = 0;
   out_6996944131011363031[234] = 0;
   out_6996944131011363031[235] = 0;
   out_6996944131011363031[236] = 0;
   out_6996944131011363031[237] = 0;
   out_6996944131011363031[238] = 0;
   out_6996944131011363031[239] = 0;
   out_6996944131011363031[240] = 0;
   out_6996944131011363031[241] = 1.0;
   out_6996944131011363031[242] = 0;
   out_6996944131011363031[243] = 0;
   out_6996944131011363031[244] = 0;
   out_6996944131011363031[245] = 0;
   out_6996944131011363031[246] = 0;
   out_6996944131011363031[247] = 0;
   out_6996944131011363031[248] = 0;
   out_6996944131011363031[249] = 0;
   out_6996944131011363031[250] = 0;
   out_6996944131011363031[251] = 0;
   out_6996944131011363031[252] = 0;
   out_6996944131011363031[253] = 0;
   out_6996944131011363031[254] = 0;
   out_6996944131011363031[255] = 0;
   out_6996944131011363031[256] = 0;
   out_6996944131011363031[257] = 0;
   out_6996944131011363031[258] = 0;
   out_6996944131011363031[259] = 0;
   out_6996944131011363031[260] = 0;
   out_6996944131011363031[261] = 0;
   out_6996944131011363031[262] = 0;
   out_6996944131011363031[263] = 1.0;
   out_6996944131011363031[264] = 0;
   out_6996944131011363031[265] = 0;
   out_6996944131011363031[266] = 0;
   out_6996944131011363031[267] = 0;
   out_6996944131011363031[268] = 0;
   out_6996944131011363031[269] = 0;
   out_6996944131011363031[270] = 0;
   out_6996944131011363031[271] = 0;
   out_6996944131011363031[272] = 0;
   out_6996944131011363031[273] = 0;
   out_6996944131011363031[274] = 0;
   out_6996944131011363031[275] = 0;
   out_6996944131011363031[276] = 0;
   out_6996944131011363031[277] = 0;
   out_6996944131011363031[278] = 0;
   out_6996944131011363031[279] = 0;
   out_6996944131011363031[280] = 0;
   out_6996944131011363031[281] = 0;
   out_6996944131011363031[282] = 0;
   out_6996944131011363031[283] = 0;
   out_6996944131011363031[284] = 0;
   out_6996944131011363031[285] = 1.0;
   out_6996944131011363031[286] = 0;
   out_6996944131011363031[287] = 0;
   out_6996944131011363031[288] = 0;
   out_6996944131011363031[289] = 0;
   out_6996944131011363031[290] = 0;
   out_6996944131011363031[291] = 0;
   out_6996944131011363031[292] = 0;
   out_6996944131011363031[293] = 0;
   out_6996944131011363031[294] = 0;
   out_6996944131011363031[295] = 0;
   out_6996944131011363031[296] = 0;
   out_6996944131011363031[297] = 0;
   out_6996944131011363031[298] = 0;
   out_6996944131011363031[299] = 0;
   out_6996944131011363031[300] = 0;
   out_6996944131011363031[301] = 0;
   out_6996944131011363031[302] = 0;
   out_6996944131011363031[303] = 0;
   out_6996944131011363031[304] = 0;
   out_6996944131011363031[305] = 0;
   out_6996944131011363031[306] = 0;
   out_6996944131011363031[307] = 1.0;
   out_6996944131011363031[308] = 0;
   out_6996944131011363031[309] = 0;
   out_6996944131011363031[310] = 0;
   out_6996944131011363031[311] = 0;
   out_6996944131011363031[312] = 0;
   out_6996944131011363031[313] = 0;
   out_6996944131011363031[314] = 0;
   out_6996944131011363031[315] = 0;
   out_6996944131011363031[316] = 0;
   out_6996944131011363031[317] = 0;
   out_6996944131011363031[318] = 0;
   out_6996944131011363031[319] = 0;
   out_6996944131011363031[320] = 0;
   out_6996944131011363031[321] = 0;
   out_6996944131011363031[322] = 0;
   out_6996944131011363031[323] = 0;
   out_6996944131011363031[324] = 0;
   out_6996944131011363031[325] = 0;
   out_6996944131011363031[326] = 0;
   out_6996944131011363031[327] = 0;
   out_6996944131011363031[328] = 0;
   out_6996944131011363031[329] = 1.0;
   out_6996944131011363031[330] = 0;
   out_6996944131011363031[331] = 0;
   out_6996944131011363031[332] = 0;
   out_6996944131011363031[333] = 0;
   out_6996944131011363031[334] = 0;
   out_6996944131011363031[335] = 0;
   out_6996944131011363031[336] = 0;
   out_6996944131011363031[337] = 0;
   out_6996944131011363031[338] = 0;
   out_6996944131011363031[339] = 0;
   out_6996944131011363031[340] = 0;
   out_6996944131011363031[341] = 0;
   out_6996944131011363031[342] = 0;
   out_6996944131011363031[343] = 0;
   out_6996944131011363031[344] = 0;
   out_6996944131011363031[345] = 0;
   out_6996944131011363031[346] = 0;
   out_6996944131011363031[347] = 0;
   out_6996944131011363031[348] = 0;
   out_6996944131011363031[349] = 0;
   out_6996944131011363031[350] = 0;
   out_6996944131011363031[351] = 1.0;
   out_6996944131011363031[352] = 0;
   out_6996944131011363031[353] = 0;
   out_6996944131011363031[354] = 0;
   out_6996944131011363031[355] = 0;
   out_6996944131011363031[356] = 0;
   out_6996944131011363031[357] = 0;
   out_6996944131011363031[358] = 0;
   out_6996944131011363031[359] = 0;
   out_6996944131011363031[360] = 0;
   out_6996944131011363031[361] = 0;
   out_6996944131011363031[362] = 0;
   out_6996944131011363031[363] = 0;
   out_6996944131011363031[364] = 0;
   out_6996944131011363031[365] = 0;
   out_6996944131011363031[366] = 0;
   out_6996944131011363031[367] = 0;
   out_6996944131011363031[368] = 0;
   out_6996944131011363031[369] = 0;
   out_6996944131011363031[370] = 0;
   out_6996944131011363031[371] = 0;
   out_6996944131011363031[372] = 0;
   out_6996944131011363031[373] = 1.0;
   out_6996944131011363031[374] = 0;
   out_6996944131011363031[375] = 0;
   out_6996944131011363031[376] = 0;
   out_6996944131011363031[377] = 0;
   out_6996944131011363031[378] = 0;
   out_6996944131011363031[379] = 0;
   out_6996944131011363031[380] = 0;
   out_6996944131011363031[381] = 0;
   out_6996944131011363031[382] = 0;
   out_6996944131011363031[383] = 0;
   out_6996944131011363031[384] = 0;
   out_6996944131011363031[385] = 0;
   out_6996944131011363031[386] = 0;
   out_6996944131011363031[387] = 0;
   out_6996944131011363031[388] = 0;
   out_6996944131011363031[389] = 0;
   out_6996944131011363031[390] = 0;
   out_6996944131011363031[391] = 0;
   out_6996944131011363031[392] = 0;
   out_6996944131011363031[393] = 0;
   out_6996944131011363031[394] = 0;
   out_6996944131011363031[395] = 1.0;
   out_6996944131011363031[396] = 0;
   out_6996944131011363031[397] = 0;
   out_6996944131011363031[398] = 0;
   out_6996944131011363031[399] = 0;
   out_6996944131011363031[400] = 0;
   out_6996944131011363031[401] = 0;
   out_6996944131011363031[402] = 0;
   out_6996944131011363031[403] = 0;
   out_6996944131011363031[404] = 0;
   out_6996944131011363031[405] = 0;
   out_6996944131011363031[406] = 0;
   out_6996944131011363031[407] = 0;
   out_6996944131011363031[408] = 0;
   out_6996944131011363031[409] = 0;
   out_6996944131011363031[410] = 0;
   out_6996944131011363031[411] = 0;
   out_6996944131011363031[412] = 0;
   out_6996944131011363031[413] = 0;
   out_6996944131011363031[414] = 0;
   out_6996944131011363031[415] = 0;
   out_6996944131011363031[416] = 0;
   out_6996944131011363031[417] = 1.0;
   out_6996944131011363031[418] = 0;
   out_6996944131011363031[419] = 0;
   out_6996944131011363031[420] = 0;
   out_6996944131011363031[421] = 0;
   out_6996944131011363031[422] = 0;
   out_6996944131011363031[423] = 0;
   out_6996944131011363031[424] = 0;
   out_6996944131011363031[425] = 0;
   out_6996944131011363031[426] = 0;
   out_6996944131011363031[427] = 0;
   out_6996944131011363031[428] = 0;
   out_6996944131011363031[429] = 0;
   out_6996944131011363031[430] = 0;
   out_6996944131011363031[431] = 0;
   out_6996944131011363031[432] = 0;
   out_6996944131011363031[433] = 0;
   out_6996944131011363031[434] = 0;
   out_6996944131011363031[435] = 0;
   out_6996944131011363031[436] = 0;
   out_6996944131011363031[437] = 0;
   out_6996944131011363031[438] = 0;
   out_6996944131011363031[439] = 1.0;
   out_6996944131011363031[440] = 0;
   out_6996944131011363031[441] = 0;
   out_6996944131011363031[442] = 0;
   out_6996944131011363031[443] = 0;
   out_6996944131011363031[444] = 0;
   out_6996944131011363031[445] = 0;
   out_6996944131011363031[446] = 0;
   out_6996944131011363031[447] = 0;
   out_6996944131011363031[448] = 0;
   out_6996944131011363031[449] = 0;
   out_6996944131011363031[450] = 0;
   out_6996944131011363031[451] = 0;
   out_6996944131011363031[452] = 0;
   out_6996944131011363031[453] = 0;
   out_6996944131011363031[454] = 0;
   out_6996944131011363031[455] = 0;
   out_6996944131011363031[456] = 0;
   out_6996944131011363031[457] = 0;
   out_6996944131011363031[458] = 0;
   out_6996944131011363031[459] = 0;
   out_6996944131011363031[460] = 0;
   out_6996944131011363031[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_4379143464075805020) {
   out_4379143464075805020[0] = dt*state[7] + state[0];
   out_4379143464075805020[1] = dt*state[8] + state[1];
   out_4379143464075805020[2] = dt*state[9] + state[2];
   out_4379143464075805020[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_4379143464075805020[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_4379143464075805020[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_4379143464075805020[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_4379143464075805020[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_4379143464075805020[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_4379143464075805020[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_4379143464075805020[10] = state[10];
   out_4379143464075805020[11] = state[11];
   out_4379143464075805020[12] = state[12];
   out_4379143464075805020[13] = state[13];
   out_4379143464075805020[14] = state[14];
   out_4379143464075805020[15] = state[15];
   out_4379143464075805020[16] = state[16];
   out_4379143464075805020[17] = state[17];
   out_4379143464075805020[18] = state[18];
   out_4379143464075805020[19] = state[19];
   out_4379143464075805020[20] = state[20];
   out_4379143464075805020[21] = state[21];
}
void F_fun(double *state, double dt, double *out_4126089116567622472) {
   out_4126089116567622472[0] = 1;
   out_4126089116567622472[1] = 0;
   out_4126089116567622472[2] = 0;
   out_4126089116567622472[3] = 0;
   out_4126089116567622472[4] = 0;
   out_4126089116567622472[5] = 0;
   out_4126089116567622472[6] = dt;
   out_4126089116567622472[7] = 0;
   out_4126089116567622472[8] = 0;
   out_4126089116567622472[9] = 0;
   out_4126089116567622472[10] = 0;
   out_4126089116567622472[11] = 0;
   out_4126089116567622472[12] = 0;
   out_4126089116567622472[13] = 0;
   out_4126089116567622472[14] = 0;
   out_4126089116567622472[15] = 0;
   out_4126089116567622472[16] = 0;
   out_4126089116567622472[17] = 0;
   out_4126089116567622472[18] = 0;
   out_4126089116567622472[19] = 0;
   out_4126089116567622472[20] = 0;
   out_4126089116567622472[21] = 0;
   out_4126089116567622472[22] = 1;
   out_4126089116567622472[23] = 0;
   out_4126089116567622472[24] = 0;
   out_4126089116567622472[25] = 0;
   out_4126089116567622472[26] = 0;
   out_4126089116567622472[27] = 0;
   out_4126089116567622472[28] = dt;
   out_4126089116567622472[29] = 0;
   out_4126089116567622472[30] = 0;
   out_4126089116567622472[31] = 0;
   out_4126089116567622472[32] = 0;
   out_4126089116567622472[33] = 0;
   out_4126089116567622472[34] = 0;
   out_4126089116567622472[35] = 0;
   out_4126089116567622472[36] = 0;
   out_4126089116567622472[37] = 0;
   out_4126089116567622472[38] = 0;
   out_4126089116567622472[39] = 0;
   out_4126089116567622472[40] = 0;
   out_4126089116567622472[41] = 0;
   out_4126089116567622472[42] = 0;
   out_4126089116567622472[43] = 0;
   out_4126089116567622472[44] = 1;
   out_4126089116567622472[45] = 0;
   out_4126089116567622472[46] = 0;
   out_4126089116567622472[47] = 0;
   out_4126089116567622472[48] = 0;
   out_4126089116567622472[49] = 0;
   out_4126089116567622472[50] = dt;
   out_4126089116567622472[51] = 0;
   out_4126089116567622472[52] = 0;
   out_4126089116567622472[53] = 0;
   out_4126089116567622472[54] = 0;
   out_4126089116567622472[55] = 0;
   out_4126089116567622472[56] = 0;
   out_4126089116567622472[57] = 0;
   out_4126089116567622472[58] = 0;
   out_4126089116567622472[59] = 0;
   out_4126089116567622472[60] = 0;
   out_4126089116567622472[61] = 0;
   out_4126089116567622472[62] = 0;
   out_4126089116567622472[63] = 0;
   out_4126089116567622472[64] = 0;
   out_4126089116567622472[65] = 0;
   out_4126089116567622472[66] = 1;
   out_4126089116567622472[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4126089116567622472[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_4126089116567622472[69] = 0;
   out_4126089116567622472[70] = 0;
   out_4126089116567622472[71] = 0;
   out_4126089116567622472[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4126089116567622472[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4126089116567622472[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4126089116567622472[75] = 0;
   out_4126089116567622472[76] = 0;
   out_4126089116567622472[77] = 0;
   out_4126089116567622472[78] = 0;
   out_4126089116567622472[79] = 0;
   out_4126089116567622472[80] = 0;
   out_4126089116567622472[81] = 0;
   out_4126089116567622472[82] = 0;
   out_4126089116567622472[83] = 0;
   out_4126089116567622472[84] = 0;
   out_4126089116567622472[85] = 0;
   out_4126089116567622472[86] = 0;
   out_4126089116567622472[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_4126089116567622472[88] = 1;
   out_4126089116567622472[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_4126089116567622472[90] = 0;
   out_4126089116567622472[91] = 0;
   out_4126089116567622472[92] = 0;
   out_4126089116567622472[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4126089116567622472[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4126089116567622472[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4126089116567622472[96] = 0;
   out_4126089116567622472[97] = 0;
   out_4126089116567622472[98] = 0;
   out_4126089116567622472[99] = 0;
   out_4126089116567622472[100] = 0;
   out_4126089116567622472[101] = 0;
   out_4126089116567622472[102] = 0;
   out_4126089116567622472[103] = 0;
   out_4126089116567622472[104] = 0;
   out_4126089116567622472[105] = 0;
   out_4126089116567622472[106] = 0;
   out_4126089116567622472[107] = 0;
   out_4126089116567622472[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_4126089116567622472[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_4126089116567622472[110] = 1;
   out_4126089116567622472[111] = 0;
   out_4126089116567622472[112] = 0;
   out_4126089116567622472[113] = 0;
   out_4126089116567622472[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4126089116567622472[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4126089116567622472[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4126089116567622472[117] = 0;
   out_4126089116567622472[118] = 0;
   out_4126089116567622472[119] = 0;
   out_4126089116567622472[120] = 0;
   out_4126089116567622472[121] = 0;
   out_4126089116567622472[122] = 0;
   out_4126089116567622472[123] = 0;
   out_4126089116567622472[124] = 0;
   out_4126089116567622472[125] = 0;
   out_4126089116567622472[126] = 0;
   out_4126089116567622472[127] = 0;
   out_4126089116567622472[128] = 0;
   out_4126089116567622472[129] = 0;
   out_4126089116567622472[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4126089116567622472[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_4126089116567622472[132] = 1;
   out_4126089116567622472[133] = 0;
   out_4126089116567622472[134] = 0;
   out_4126089116567622472[135] = 0;
   out_4126089116567622472[136] = 0;
   out_4126089116567622472[137] = 0;
   out_4126089116567622472[138] = 0;
   out_4126089116567622472[139] = 0;
   out_4126089116567622472[140] = 0;
   out_4126089116567622472[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_4126089116567622472[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4126089116567622472[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4126089116567622472[144] = 0;
   out_4126089116567622472[145] = 0;
   out_4126089116567622472[146] = 0;
   out_4126089116567622472[147] = 0;
   out_4126089116567622472[148] = 0;
   out_4126089116567622472[149] = 0;
   out_4126089116567622472[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_4126089116567622472[151] = 0;
   out_4126089116567622472[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_4126089116567622472[153] = 0;
   out_4126089116567622472[154] = 1;
   out_4126089116567622472[155] = 0;
   out_4126089116567622472[156] = 0;
   out_4126089116567622472[157] = 0;
   out_4126089116567622472[158] = 0;
   out_4126089116567622472[159] = 0;
   out_4126089116567622472[160] = 0;
   out_4126089116567622472[161] = 0;
   out_4126089116567622472[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_4126089116567622472[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_4126089116567622472[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4126089116567622472[165] = 0;
   out_4126089116567622472[166] = 0;
   out_4126089116567622472[167] = 0;
   out_4126089116567622472[168] = 0;
   out_4126089116567622472[169] = 0;
   out_4126089116567622472[170] = 0;
   out_4126089116567622472[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_4126089116567622472[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_4126089116567622472[173] = 0;
   out_4126089116567622472[174] = 0;
   out_4126089116567622472[175] = 0;
   out_4126089116567622472[176] = 1;
   out_4126089116567622472[177] = 0;
   out_4126089116567622472[178] = 0;
   out_4126089116567622472[179] = 0;
   out_4126089116567622472[180] = 0;
   out_4126089116567622472[181] = 0;
   out_4126089116567622472[182] = 0;
   out_4126089116567622472[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_4126089116567622472[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_4126089116567622472[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_4126089116567622472[186] = 0;
   out_4126089116567622472[187] = 0;
   out_4126089116567622472[188] = 0;
   out_4126089116567622472[189] = 0;
   out_4126089116567622472[190] = 0;
   out_4126089116567622472[191] = 0;
   out_4126089116567622472[192] = 0;
   out_4126089116567622472[193] = 0;
   out_4126089116567622472[194] = 0;
   out_4126089116567622472[195] = 0;
   out_4126089116567622472[196] = 0;
   out_4126089116567622472[197] = 0;
   out_4126089116567622472[198] = 1;
   out_4126089116567622472[199] = 0;
   out_4126089116567622472[200] = 0;
   out_4126089116567622472[201] = 0;
   out_4126089116567622472[202] = 0;
   out_4126089116567622472[203] = 0;
   out_4126089116567622472[204] = 0;
   out_4126089116567622472[205] = 0;
   out_4126089116567622472[206] = 0;
   out_4126089116567622472[207] = 0;
   out_4126089116567622472[208] = 0;
   out_4126089116567622472[209] = 0;
   out_4126089116567622472[210] = 0;
   out_4126089116567622472[211] = 0;
   out_4126089116567622472[212] = 0;
   out_4126089116567622472[213] = 0;
   out_4126089116567622472[214] = 0;
   out_4126089116567622472[215] = 0;
   out_4126089116567622472[216] = 0;
   out_4126089116567622472[217] = 0;
   out_4126089116567622472[218] = 0;
   out_4126089116567622472[219] = 0;
   out_4126089116567622472[220] = 1;
   out_4126089116567622472[221] = 0;
   out_4126089116567622472[222] = 0;
   out_4126089116567622472[223] = 0;
   out_4126089116567622472[224] = 0;
   out_4126089116567622472[225] = 0;
   out_4126089116567622472[226] = 0;
   out_4126089116567622472[227] = 0;
   out_4126089116567622472[228] = 0;
   out_4126089116567622472[229] = 0;
   out_4126089116567622472[230] = 0;
   out_4126089116567622472[231] = 0;
   out_4126089116567622472[232] = 0;
   out_4126089116567622472[233] = 0;
   out_4126089116567622472[234] = 0;
   out_4126089116567622472[235] = 0;
   out_4126089116567622472[236] = 0;
   out_4126089116567622472[237] = 0;
   out_4126089116567622472[238] = 0;
   out_4126089116567622472[239] = 0;
   out_4126089116567622472[240] = 0;
   out_4126089116567622472[241] = 0;
   out_4126089116567622472[242] = 1;
   out_4126089116567622472[243] = 0;
   out_4126089116567622472[244] = 0;
   out_4126089116567622472[245] = 0;
   out_4126089116567622472[246] = 0;
   out_4126089116567622472[247] = 0;
   out_4126089116567622472[248] = 0;
   out_4126089116567622472[249] = 0;
   out_4126089116567622472[250] = 0;
   out_4126089116567622472[251] = 0;
   out_4126089116567622472[252] = 0;
   out_4126089116567622472[253] = 0;
   out_4126089116567622472[254] = 0;
   out_4126089116567622472[255] = 0;
   out_4126089116567622472[256] = 0;
   out_4126089116567622472[257] = 0;
   out_4126089116567622472[258] = 0;
   out_4126089116567622472[259] = 0;
   out_4126089116567622472[260] = 0;
   out_4126089116567622472[261] = 0;
   out_4126089116567622472[262] = 0;
   out_4126089116567622472[263] = 0;
   out_4126089116567622472[264] = 1;
   out_4126089116567622472[265] = 0;
   out_4126089116567622472[266] = 0;
   out_4126089116567622472[267] = 0;
   out_4126089116567622472[268] = 0;
   out_4126089116567622472[269] = 0;
   out_4126089116567622472[270] = 0;
   out_4126089116567622472[271] = 0;
   out_4126089116567622472[272] = 0;
   out_4126089116567622472[273] = 0;
   out_4126089116567622472[274] = 0;
   out_4126089116567622472[275] = 0;
   out_4126089116567622472[276] = 0;
   out_4126089116567622472[277] = 0;
   out_4126089116567622472[278] = 0;
   out_4126089116567622472[279] = 0;
   out_4126089116567622472[280] = 0;
   out_4126089116567622472[281] = 0;
   out_4126089116567622472[282] = 0;
   out_4126089116567622472[283] = 0;
   out_4126089116567622472[284] = 0;
   out_4126089116567622472[285] = 0;
   out_4126089116567622472[286] = 1;
   out_4126089116567622472[287] = 0;
   out_4126089116567622472[288] = 0;
   out_4126089116567622472[289] = 0;
   out_4126089116567622472[290] = 0;
   out_4126089116567622472[291] = 0;
   out_4126089116567622472[292] = 0;
   out_4126089116567622472[293] = 0;
   out_4126089116567622472[294] = 0;
   out_4126089116567622472[295] = 0;
   out_4126089116567622472[296] = 0;
   out_4126089116567622472[297] = 0;
   out_4126089116567622472[298] = 0;
   out_4126089116567622472[299] = 0;
   out_4126089116567622472[300] = 0;
   out_4126089116567622472[301] = 0;
   out_4126089116567622472[302] = 0;
   out_4126089116567622472[303] = 0;
   out_4126089116567622472[304] = 0;
   out_4126089116567622472[305] = 0;
   out_4126089116567622472[306] = 0;
   out_4126089116567622472[307] = 0;
   out_4126089116567622472[308] = 1;
   out_4126089116567622472[309] = 0;
   out_4126089116567622472[310] = 0;
   out_4126089116567622472[311] = 0;
   out_4126089116567622472[312] = 0;
   out_4126089116567622472[313] = 0;
   out_4126089116567622472[314] = 0;
   out_4126089116567622472[315] = 0;
   out_4126089116567622472[316] = 0;
   out_4126089116567622472[317] = 0;
   out_4126089116567622472[318] = 0;
   out_4126089116567622472[319] = 0;
   out_4126089116567622472[320] = 0;
   out_4126089116567622472[321] = 0;
   out_4126089116567622472[322] = 0;
   out_4126089116567622472[323] = 0;
   out_4126089116567622472[324] = 0;
   out_4126089116567622472[325] = 0;
   out_4126089116567622472[326] = 0;
   out_4126089116567622472[327] = 0;
   out_4126089116567622472[328] = 0;
   out_4126089116567622472[329] = 0;
   out_4126089116567622472[330] = 1;
   out_4126089116567622472[331] = 0;
   out_4126089116567622472[332] = 0;
   out_4126089116567622472[333] = 0;
   out_4126089116567622472[334] = 0;
   out_4126089116567622472[335] = 0;
   out_4126089116567622472[336] = 0;
   out_4126089116567622472[337] = 0;
   out_4126089116567622472[338] = 0;
   out_4126089116567622472[339] = 0;
   out_4126089116567622472[340] = 0;
   out_4126089116567622472[341] = 0;
   out_4126089116567622472[342] = 0;
   out_4126089116567622472[343] = 0;
   out_4126089116567622472[344] = 0;
   out_4126089116567622472[345] = 0;
   out_4126089116567622472[346] = 0;
   out_4126089116567622472[347] = 0;
   out_4126089116567622472[348] = 0;
   out_4126089116567622472[349] = 0;
   out_4126089116567622472[350] = 0;
   out_4126089116567622472[351] = 0;
   out_4126089116567622472[352] = 1;
   out_4126089116567622472[353] = 0;
   out_4126089116567622472[354] = 0;
   out_4126089116567622472[355] = 0;
   out_4126089116567622472[356] = 0;
   out_4126089116567622472[357] = 0;
   out_4126089116567622472[358] = 0;
   out_4126089116567622472[359] = 0;
   out_4126089116567622472[360] = 0;
   out_4126089116567622472[361] = 0;
   out_4126089116567622472[362] = 0;
   out_4126089116567622472[363] = 0;
   out_4126089116567622472[364] = 0;
   out_4126089116567622472[365] = 0;
   out_4126089116567622472[366] = 0;
   out_4126089116567622472[367] = 0;
   out_4126089116567622472[368] = 0;
   out_4126089116567622472[369] = 0;
   out_4126089116567622472[370] = 0;
   out_4126089116567622472[371] = 0;
   out_4126089116567622472[372] = 0;
   out_4126089116567622472[373] = 0;
   out_4126089116567622472[374] = 1;
   out_4126089116567622472[375] = 0;
   out_4126089116567622472[376] = 0;
   out_4126089116567622472[377] = 0;
   out_4126089116567622472[378] = 0;
   out_4126089116567622472[379] = 0;
   out_4126089116567622472[380] = 0;
   out_4126089116567622472[381] = 0;
   out_4126089116567622472[382] = 0;
   out_4126089116567622472[383] = 0;
   out_4126089116567622472[384] = 0;
   out_4126089116567622472[385] = 0;
   out_4126089116567622472[386] = 0;
   out_4126089116567622472[387] = 0;
   out_4126089116567622472[388] = 0;
   out_4126089116567622472[389] = 0;
   out_4126089116567622472[390] = 0;
   out_4126089116567622472[391] = 0;
   out_4126089116567622472[392] = 0;
   out_4126089116567622472[393] = 0;
   out_4126089116567622472[394] = 0;
   out_4126089116567622472[395] = 0;
   out_4126089116567622472[396] = 1;
   out_4126089116567622472[397] = 0;
   out_4126089116567622472[398] = 0;
   out_4126089116567622472[399] = 0;
   out_4126089116567622472[400] = 0;
   out_4126089116567622472[401] = 0;
   out_4126089116567622472[402] = 0;
   out_4126089116567622472[403] = 0;
   out_4126089116567622472[404] = 0;
   out_4126089116567622472[405] = 0;
   out_4126089116567622472[406] = 0;
   out_4126089116567622472[407] = 0;
   out_4126089116567622472[408] = 0;
   out_4126089116567622472[409] = 0;
   out_4126089116567622472[410] = 0;
   out_4126089116567622472[411] = 0;
   out_4126089116567622472[412] = 0;
   out_4126089116567622472[413] = 0;
   out_4126089116567622472[414] = 0;
   out_4126089116567622472[415] = 0;
   out_4126089116567622472[416] = 0;
   out_4126089116567622472[417] = 0;
   out_4126089116567622472[418] = 1;
   out_4126089116567622472[419] = 0;
   out_4126089116567622472[420] = 0;
   out_4126089116567622472[421] = 0;
   out_4126089116567622472[422] = 0;
   out_4126089116567622472[423] = 0;
   out_4126089116567622472[424] = 0;
   out_4126089116567622472[425] = 0;
   out_4126089116567622472[426] = 0;
   out_4126089116567622472[427] = 0;
   out_4126089116567622472[428] = 0;
   out_4126089116567622472[429] = 0;
   out_4126089116567622472[430] = 0;
   out_4126089116567622472[431] = 0;
   out_4126089116567622472[432] = 0;
   out_4126089116567622472[433] = 0;
   out_4126089116567622472[434] = 0;
   out_4126089116567622472[435] = 0;
   out_4126089116567622472[436] = 0;
   out_4126089116567622472[437] = 0;
   out_4126089116567622472[438] = 0;
   out_4126089116567622472[439] = 0;
   out_4126089116567622472[440] = 1;
}
void h_4(double *state, double *unused, double *out_7517708438626322194) {
   out_7517708438626322194[0] = state[10] + state[13];
   out_7517708438626322194[1] = state[11] + state[14];
   out_7517708438626322194[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_4871242145388500877) {
   out_4871242145388500877[0] = 0;
   out_4871242145388500877[1] = 0;
   out_4871242145388500877[2] = 0;
   out_4871242145388500877[3] = 0;
   out_4871242145388500877[4] = 0;
   out_4871242145388500877[5] = 0;
   out_4871242145388500877[6] = 0;
   out_4871242145388500877[7] = 0;
   out_4871242145388500877[8] = 0;
   out_4871242145388500877[9] = 0;
   out_4871242145388500877[10] = 1;
   out_4871242145388500877[11] = 0;
   out_4871242145388500877[12] = 0;
   out_4871242145388500877[13] = 1;
   out_4871242145388500877[14] = 0;
   out_4871242145388500877[15] = 0;
   out_4871242145388500877[16] = 0;
   out_4871242145388500877[17] = 0;
   out_4871242145388500877[18] = 0;
   out_4871242145388500877[19] = 0;
   out_4871242145388500877[20] = 0;
   out_4871242145388500877[21] = 0;
   out_4871242145388500877[22] = 0;
   out_4871242145388500877[23] = 0;
   out_4871242145388500877[24] = 0;
   out_4871242145388500877[25] = 0;
   out_4871242145388500877[26] = 0;
   out_4871242145388500877[27] = 0;
   out_4871242145388500877[28] = 0;
   out_4871242145388500877[29] = 0;
   out_4871242145388500877[30] = 0;
   out_4871242145388500877[31] = 0;
   out_4871242145388500877[32] = 0;
   out_4871242145388500877[33] = 1;
   out_4871242145388500877[34] = 0;
   out_4871242145388500877[35] = 0;
   out_4871242145388500877[36] = 1;
   out_4871242145388500877[37] = 0;
   out_4871242145388500877[38] = 0;
   out_4871242145388500877[39] = 0;
   out_4871242145388500877[40] = 0;
   out_4871242145388500877[41] = 0;
   out_4871242145388500877[42] = 0;
   out_4871242145388500877[43] = 0;
   out_4871242145388500877[44] = 0;
   out_4871242145388500877[45] = 0;
   out_4871242145388500877[46] = 0;
   out_4871242145388500877[47] = 0;
   out_4871242145388500877[48] = 0;
   out_4871242145388500877[49] = 0;
   out_4871242145388500877[50] = 0;
   out_4871242145388500877[51] = 0;
   out_4871242145388500877[52] = 0;
   out_4871242145388500877[53] = 0;
   out_4871242145388500877[54] = 0;
   out_4871242145388500877[55] = 0;
   out_4871242145388500877[56] = 1;
   out_4871242145388500877[57] = 0;
   out_4871242145388500877[58] = 0;
   out_4871242145388500877[59] = 1;
   out_4871242145388500877[60] = 0;
   out_4871242145388500877[61] = 0;
   out_4871242145388500877[62] = 0;
   out_4871242145388500877[63] = 0;
   out_4871242145388500877[64] = 0;
   out_4871242145388500877[65] = 0;
}
void h_9(double *state, double *unused, double *out_6840173855033849765) {
   out_6840173855033849765[0] = state[10];
   out_6840173855033849765[1] = state[11];
   out_6840173855033849765[2] = state[12];
}
void H_9(double *state, double *unused, double *out_5112431792018091522) {
   out_5112431792018091522[0] = 0;
   out_5112431792018091522[1] = 0;
   out_5112431792018091522[2] = 0;
   out_5112431792018091522[3] = 0;
   out_5112431792018091522[4] = 0;
   out_5112431792018091522[5] = 0;
   out_5112431792018091522[6] = 0;
   out_5112431792018091522[7] = 0;
   out_5112431792018091522[8] = 0;
   out_5112431792018091522[9] = 0;
   out_5112431792018091522[10] = 1;
   out_5112431792018091522[11] = 0;
   out_5112431792018091522[12] = 0;
   out_5112431792018091522[13] = 0;
   out_5112431792018091522[14] = 0;
   out_5112431792018091522[15] = 0;
   out_5112431792018091522[16] = 0;
   out_5112431792018091522[17] = 0;
   out_5112431792018091522[18] = 0;
   out_5112431792018091522[19] = 0;
   out_5112431792018091522[20] = 0;
   out_5112431792018091522[21] = 0;
   out_5112431792018091522[22] = 0;
   out_5112431792018091522[23] = 0;
   out_5112431792018091522[24] = 0;
   out_5112431792018091522[25] = 0;
   out_5112431792018091522[26] = 0;
   out_5112431792018091522[27] = 0;
   out_5112431792018091522[28] = 0;
   out_5112431792018091522[29] = 0;
   out_5112431792018091522[30] = 0;
   out_5112431792018091522[31] = 0;
   out_5112431792018091522[32] = 0;
   out_5112431792018091522[33] = 1;
   out_5112431792018091522[34] = 0;
   out_5112431792018091522[35] = 0;
   out_5112431792018091522[36] = 0;
   out_5112431792018091522[37] = 0;
   out_5112431792018091522[38] = 0;
   out_5112431792018091522[39] = 0;
   out_5112431792018091522[40] = 0;
   out_5112431792018091522[41] = 0;
   out_5112431792018091522[42] = 0;
   out_5112431792018091522[43] = 0;
   out_5112431792018091522[44] = 0;
   out_5112431792018091522[45] = 0;
   out_5112431792018091522[46] = 0;
   out_5112431792018091522[47] = 0;
   out_5112431792018091522[48] = 0;
   out_5112431792018091522[49] = 0;
   out_5112431792018091522[50] = 0;
   out_5112431792018091522[51] = 0;
   out_5112431792018091522[52] = 0;
   out_5112431792018091522[53] = 0;
   out_5112431792018091522[54] = 0;
   out_5112431792018091522[55] = 0;
   out_5112431792018091522[56] = 1;
   out_5112431792018091522[57] = 0;
   out_5112431792018091522[58] = 0;
   out_5112431792018091522[59] = 0;
   out_5112431792018091522[60] = 0;
   out_5112431792018091522[61] = 0;
   out_5112431792018091522[62] = 0;
   out_5112431792018091522[63] = 0;
   out_5112431792018091522[64] = 0;
   out_5112431792018091522[65] = 0;
}
void h_10(double *state, double *unused, double *out_173744706950380686) {
   out_173744706950380686[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_173744706950380686[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_173744706950380686[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_1457760568505601749) {
   out_1457760568505601749[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_1457760568505601749[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1457760568505601749[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_1457760568505601749[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1457760568505601749[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1457760568505601749[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1457760568505601749[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1457760568505601749[7] = 0;
   out_1457760568505601749[8] = 0;
   out_1457760568505601749[9] = 0;
   out_1457760568505601749[10] = 0;
   out_1457760568505601749[11] = 0;
   out_1457760568505601749[12] = 0;
   out_1457760568505601749[13] = 0;
   out_1457760568505601749[14] = 0;
   out_1457760568505601749[15] = 0;
   out_1457760568505601749[16] = 1;
   out_1457760568505601749[17] = 0;
   out_1457760568505601749[18] = 0;
   out_1457760568505601749[19] = 1;
   out_1457760568505601749[20] = 0;
   out_1457760568505601749[21] = 0;
   out_1457760568505601749[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_1457760568505601749[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_1457760568505601749[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_1457760568505601749[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1457760568505601749[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1457760568505601749[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1457760568505601749[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1457760568505601749[29] = 0;
   out_1457760568505601749[30] = 0;
   out_1457760568505601749[31] = 0;
   out_1457760568505601749[32] = 0;
   out_1457760568505601749[33] = 0;
   out_1457760568505601749[34] = 0;
   out_1457760568505601749[35] = 0;
   out_1457760568505601749[36] = 0;
   out_1457760568505601749[37] = 0;
   out_1457760568505601749[38] = 0;
   out_1457760568505601749[39] = 1;
   out_1457760568505601749[40] = 0;
   out_1457760568505601749[41] = 0;
   out_1457760568505601749[42] = 1;
   out_1457760568505601749[43] = 0;
   out_1457760568505601749[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_1457760568505601749[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_1457760568505601749[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_1457760568505601749[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_1457760568505601749[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_1457760568505601749[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_1457760568505601749[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_1457760568505601749[51] = 0;
   out_1457760568505601749[52] = 0;
   out_1457760568505601749[53] = 0;
   out_1457760568505601749[54] = 0;
   out_1457760568505601749[55] = 0;
   out_1457760568505601749[56] = 0;
   out_1457760568505601749[57] = 0;
   out_1457760568505601749[58] = 0;
   out_1457760568505601749[59] = 0;
   out_1457760568505601749[60] = 0;
   out_1457760568505601749[61] = 0;
   out_1457760568505601749[62] = 1;
   out_1457760568505601749[63] = 0;
   out_1457760568505601749[64] = 0;
   out_1457760568505601749[65] = 1;
}
void h_12(double *state, double *unused, double *out_5440948760933695840) {
   out_5440948760933695840[0] = state[0];
   out_5440948760933695840[1] = state[1];
   out_5440948760933695840[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8556045520289088944) {
   out_8556045520289088944[0] = 1;
   out_8556045520289088944[1] = 0;
   out_8556045520289088944[2] = 0;
   out_8556045520289088944[3] = 0;
   out_8556045520289088944[4] = 0;
   out_8556045520289088944[5] = 0;
   out_8556045520289088944[6] = 0;
   out_8556045520289088944[7] = 0;
   out_8556045520289088944[8] = 0;
   out_8556045520289088944[9] = 0;
   out_8556045520289088944[10] = 0;
   out_8556045520289088944[11] = 0;
   out_8556045520289088944[12] = 0;
   out_8556045520289088944[13] = 0;
   out_8556045520289088944[14] = 0;
   out_8556045520289088944[15] = 0;
   out_8556045520289088944[16] = 0;
   out_8556045520289088944[17] = 0;
   out_8556045520289088944[18] = 0;
   out_8556045520289088944[19] = 0;
   out_8556045520289088944[20] = 0;
   out_8556045520289088944[21] = 0;
   out_8556045520289088944[22] = 0;
   out_8556045520289088944[23] = 1;
   out_8556045520289088944[24] = 0;
   out_8556045520289088944[25] = 0;
   out_8556045520289088944[26] = 0;
   out_8556045520289088944[27] = 0;
   out_8556045520289088944[28] = 0;
   out_8556045520289088944[29] = 0;
   out_8556045520289088944[30] = 0;
   out_8556045520289088944[31] = 0;
   out_8556045520289088944[32] = 0;
   out_8556045520289088944[33] = 0;
   out_8556045520289088944[34] = 0;
   out_8556045520289088944[35] = 0;
   out_8556045520289088944[36] = 0;
   out_8556045520289088944[37] = 0;
   out_8556045520289088944[38] = 0;
   out_8556045520289088944[39] = 0;
   out_8556045520289088944[40] = 0;
   out_8556045520289088944[41] = 0;
   out_8556045520289088944[42] = 0;
   out_8556045520289088944[43] = 0;
   out_8556045520289088944[44] = 0;
   out_8556045520289088944[45] = 0;
   out_8556045520289088944[46] = 1;
   out_8556045520289088944[47] = 0;
   out_8556045520289088944[48] = 0;
   out_8556045520289088944[49] = 0;
   out_8556045520289088944[50] = 0;
   out_8556045520289088944[51] = 0;
   out_8556045520289088944[52] = 0;
   out_8556045520289088944[53] = 0;
   out_8556045520289088944[54] = 0;
   out_8556045520289088944[55] = 0;
   out_8556045520289088944[56] = 0;
   out_8556045520289088944[57] = 0;
   out_8556045520289088944[58] = 0;
   out_8556045520289088944[59] = 0;
   out_8556045520289088944[60] = 0;
   out_8556045520289088944[61] = 0;
   out_8556045520289088944[62] = 0;
   out_8556045520289088944[63] = 0;
   out_8556045520289088944[64] = 0;
   out_8556045520289088944[65] = 0;
}
void h_35(double *state, double *unused, double *out_6215788252178693963) {
   out_6215788252178693963[0] = state[7];
   out_6215788252178693963[1] = state[8];
   out_6215788252178693963[2] = state[9];
}
void H_35(double *state, double *unused, double *out_5810482487964075235) {
   out_5810482487964075235[0] = 0;
   out_5810482487964075235[1] = 0;
   out_5810482487964075235[2] = 0;
   out_5810482487964075235[3] = 0;
   out_5810482487964075235[4] = 0;
   out_5810482487964075235[5] = 0;
   out_5810482487964075235[6] = 0;
   out_5810482487964075235[7] = 1;
   out_5810482487964075235[8] = 0;
   out_5810482487964075235[9] = 0;
   out_5810482487964075235[10] = 0;
   out_5810482487964075235[11] = 0;
   out_5810482487964075235[12] = 0;
   out_5810482487964075235[13] = 0;
   out_5810482487964075235[14] = 0;
   out_5810482487964075235[15] = 0;
   out_5810482487964075235[16] = 0;
   out_5810482487964075235[17] = 0;
   out_5810482487964075235[18] = 0;
   out_5810482487964075235[19] = 0;
   out_5810482487964075235[20] = 0;
   out_5810482487964075235[21] = 0;
   out_5810482487964075235[22] = 0;
   out_5810482487964075235[23] = 0;
   out_5810482487964075235[24] = 0;
   out_5810482487964075235[25] = 0;
   out_5810482487964075235[26] = 0;
   out_5810482487964075235[27] = 0;
   out_5810482487964075235[28] = 0;
   out_5810482487964075235[29] = 0;
   out_5810482487964075235[30] = 1;
   out_5810482487964075235[31] = 0;
   out_5810482487964075235[32] = 0;
   out_5810482487964075235[33] = 0;
   out_5810482487964075235[34] = 0;
   out_5810482487964075235[35] = 0;
   out_5810482487964075235[36] = 0;
   out_5810482487964075235[37] = 0;
   out_5810482487964075235[38] = 0;
   out_5810482487964075235[39] = 0;
   out_5810482487964075235[40] = 0;
   out_5810482487964075235[41] = 0;
   out_5810482487964075235[42] = 0;
   out_5810482487964075235[43] = 0;
   out_5810482487964075235[44] = 0;
   out_5810482487964075235[45] = 0;
   out_5810482487964075235[46] = 0;
   out_5810482487964075235[47] = 0;
   out_5810482487964075235[48] = 0;
   out_5810482487964075235[49] = 0;
   out_5810482487964075235[50] = 0;
   out_5810482487964075235[51] = 0;
   out_5810482487964075235[52] = 0;
   out_5810482487964075235[53] = 1;
   out_5810482487964075235[54] = 0;
   out_5810482487964075235[55] = 0;
   out_5810482487964075235[56] = 0;
   out_5810482487964075235[57] = 0;
   out_5810482487964075235[58] = 0;
   out_5810482487964075235[59] = 0;
   out_5810482487964075235[60] = 0;
   out_5810482487964075235[61] = 0;
   out_5810482487964075235[62] = 0;
   out_5810482487964075235[63] = 0;
   out_5810482487964075235[64] = 0;
   out_5810482487964075235[65] = 0;
}
void h_32(double *state, double *unused, double *out_7181094678608317786) {
   out_7181094678608317786[0] = state[3];
   out_7181094678608317786[1] = state[4];
   out_7181094678608317786[2] = state[5];
   out_7181094678608317786[3] = state[6];
}
void H_32(double *state, double *unused, double *out_8295256810012369493) {
   out_8295256810012369493[0] = 0;
   out_8295256810012369493[1] = 0;
   out_8295256810012369493[2] = 0;
   out_8295256810012369493[3] = 1;
   out_8295256810012369493[4] = 0;
   out_8295256810012369493[5] = 0;
   out_8295256810012369493[6] = 0;
   out_8295256810012369493[7] = 0;
   out_8295256810012369493[8] = 0;
   out_8295256810012369493[9] = 0;
   out_8295256810012369493[10] = 0;
   out_8295256810012369493[11] = 0;
   out_8295256810012369493[12] = 0;
   out_8295256810012369493[13] = 0;
   out_8295256810012369493[14] = 0;
   out_8295256810012369493[15] = 0;
   out_8295256810012369493[16] = 0;
   out_8295256810012369493[17] = 0;
   out_8295256810012369493[18] = 0;
   out_8295256810012369493[19] = 0;
   out_8295256810012369493[20] = 0;
   out_8295256810012369493[21] = 0;
   out_8295256810012369493[22] = 0;
   out_8295256810012369493[23] = 0;
   out_8295256810012369493[24] = 0;
   out_8295256810012369493[25] = 0;
   out_8295256810012369493[26] = 1;
   out_8295256810012369493[27] = 0;
   out_8295256810012369493[28] = 0;
   out_8295256810012369493[29] = 0;
   out_8295256810012369493[30] = 0;
   out_8295256810012369493[31] = 0;
   out_8295256810012369493[32] = 0;
   out_8295256810012369493[33] = 0;
   out_8295256810012369493[34] = 0;
   out_8295256810012369493[35] = 0;
   out_8295256810012369493[36] = 0;
   out_8295256810012369493[37] = 0;
   out_8295256810012369493[38] = 0;
   out_8295256810012369493[39] = 0;
   out_8295256810012369493[40] = 0;
   out_8295256810012369493[41] = 0;
   out_8295256810012369493[42] = 0;
   out_8295256810012369493[43] = 0;
   out_8295256810012369493[44] = 0;
   out_8295256810012369493[45] = 0;
   out_8295256810012369493[46] = 0;
   out_8295256810012369493[47] = 0;
   out_8295256810012369493[48] = 0;
   out_8295256810012369493[49] = 1;
   out_8295256810012369493[50] = 0;
   out_8295256810012369493[51] = 0;
   out_8295256810012369493[52] = 0;
   out_8295256810012369493[53] = 0;
   out_8295256810012369493[54] = 0;
   out_8295256810012369493[55] = 0;
   out_8295256810012369493[56] = 0;
   out_8295256810012369493[57] = 0;
   out_8295256810012369493[58] = 0;
   out_8295256810012369493[59] = 0;
   out_8295256810012369493[60] = 0;
   out_8295256810012369493[61] = 0;
   out_8295256810012369493[62] = 0;
   out_8295256810012369493[63] = 0;
   out_8295256810012369493[64] = 0;
   out_8295256810012369493[65] = 0;
   out_8295256810012369493[66] = 0;
   out_8295256810012369493[67] = 0;
   out_8295256810012369493[68] = 0;
   out_8295256810012369493[69] = 0;
   out_8295256810012369493[70] = 0;
   out_8295256810012369493[71] = 0;
   out_8295256810012369493[72] = 1;
   out_8295256810012369493[73] = 0;
   out_8295256810012369493[74] = 0;
   out_8295256810012369493[75] = 0;
   out_8295256810012369493[76] = 0;
   out_8295256810012369493[77] = 0;
   out_8295256810012369493[78] = 0;
   out_8295256810012369493[79] = 0;
   out_8295256810012369493[80] = 0;
   out_8295256810012369493[81] = 0;
   out_8295256810012369493[82] = 0;
   out_8295256810012369493[83] = 0;
   out_8295256810012369493[84] = 0;
   out_8295256810012369493[85] = 0;
   out_8295256810012369493[86] = 0;
   out_8295256810012369493[87] = 0;
}
void h_13(double *state, double *unused, double *out_5340487374202210186) {
   out_5340487374202210186[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_5340487374202210186[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_5340487374202210186[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_7628484752367355419) {
   out_7628484752367355419[0] = 0;
   out_7628484752367355419[1] = 0;
   out_7628484752367355419[2] = 0;
   out_7628484752367355419[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7628484752367355419[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7628484752367355419[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_7628484752367355419[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7628484752367355419[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_7628484752367355419[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_7628484752367355419[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_7628484752367355419[10] = 0;
   out_7628484752367355419[11] = 0;
   out_7628484752367355419[12] = 0;
   out_7628484752367355419[13] = 0;
   out_7628484752367355419[14] = 0;
   out_7628484752367355419[15] = 0;
   out_7628484752367355419[16] = 0;
   out_7628484752367355419[17] = 0;
   out_7628484752367355419[18] = 0;
   out_7628484752367355419[19] = 0;
   out_7628484752367355419[20] = 0;
   out_7628484752367355419[21] = 0;
   out_7628484752367355419[22] = 0;
   out_7628484752367355419[23] = 0;
   out_7628484752367355419[24] = 0;
   out_7628484752367355419[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_7628484752367355419[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7628484752367355419[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7628484752367355419[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_7628484752367355419[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_7628484752367355419[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_7628484752367355419[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_7628484752367355419[32] = 0;
   out_7628484752367355419[33] = 0;
   out_7628484752367355419[34] = 0;
   out_7628484752367355419[35] = 0;
   out_7628484752367355419[36] = 0;
   out_7628484752367355419[37] = 0;
   out_7628484752367355419[38] = 0;
   out_7628484752367355419[39] = 0;
   out_7628484752367355419[40] = 0;
   out_7628484752367355419[41] = 0;
   out_7628484752367355419[42] = 0;
   out_7628484752367355419[43] = 0;
   out_7628484752367355419[44] = 0;
   out_7628484752367355419[45] = 0;
   out_7628484752367355419[46] = 0;
   out_7628484752367355419[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_7628484752367355419[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_7628484752367355419[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_7628484752367355419[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_7628484752367355419[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_7628484752367355419[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_7628484752367355419[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_7628484752367355419[54] = 0;
   out_7628484752367355419[55] = 0;
   out_7628484752367355419[56] = 0;
   out_7628484752367355419[57] = 0;
   out_7628484752367355419[58] = 0;
   out_7628484752367355419[59] = 0;
   out_7628484752367355419[60] = 0;
   out_7628484752367355419[61] = 0;
   out_7628484752367355419[62] = 0;
   out_7628484752367355419[63] = 0;
   out_7628484752367355419[64] = 0;
   out_7628484752367355419[65] = 0;
}
void h_14(double *state, double *unused, double *out_6840173855033849765) {
   out_6840173855033849765[0] = state[10];
   out_6840173855033849765[1] = state[11];
   out_6840173855033849765[2] = state[12];
}
void H_14(double *state, double *unused, double *out_5112431792018091522) {
   out_5112431792018091522[0] = 0;
   out_5112431792018091522[1] = 0;
   out_5112431792018091522[2] = 0;
   out_5112431792018091522[3] = 0;
   out_5112431792018091522[4] = 0;
   out_5112431792018091522[5] = 0;
   out_5112431792018091522[6] = 0;
   out_5112431792018091522[7] = 0;
   out_5112431792018091522[8] = 0;
   out_5112431792018091522[9] = 0;
   out_5112431792018091522[10] = 1;
   out_5112431792018091522[11] = 0;
   out_5112431792018091522[12] = 0;
   out_5112431792018091522[13] = 0;
   out_5112431792018091522[14] = 0;
   out_5112431792018091522[15] = 0;
   out_5112431792018091522[16] = 0;
   out_5112431792018091522[17] = 0;
   out_5112431792018091522[18] = 0;
   out_5112431792018091522[19] = 0;
   out_5112431792018091522[20] = 0;
   out_5112431792018091522[21] = 0;
   out_5112431792018091522[22] = 0;
   out_5112431792018091522[23] = 0;
   out_5112431792018091522[24] = 0;
   out_5112431792018091522[25] = 0;
   out_5112431792018091522[26] = 0;
   out_5112431792018091522[27] = 0;
   out_5112431792018091522[28] = 0;
   out_5112431792018091522[29] = 0;
   out_5112431792018091522[30] = 0;
   out_5112431792018091522[31] = 0;
   out_5112431792018091522[32] = 0;
   out_5112431792018091522[33] = 1;
   out_5112431792018091522[34] = 0;
   out_5112431792018091522[35] = 0;
   out_5112431792018091522[36] = 0;
   out_5112431792018091522[37] = 0;
   out_5112431792018091522[38] = 0;
   out_5112431792018091522[39] = 0;
   out_5112431792018091522[40] = 0;
   out_5112431792018091522[41] = 0;
   out_5112431792018091522[42] = 0;
   out_5112431792018091522[43] = 0;
   out_5112431792018091522[44] = 0;
   out_5112431792018091522[45] = 0;
   out_5112431792018091522[46] = 0;
   out_5112431792018091522[47] = 0;
   out_5112431792018091522[48] = 0;
   out_5112431792018091522[49] = 0;
   out_5112431792018091522[50] = 0;
   out_5112431792018091522[51] = 0;
   out_5112431792018091522[52] = 0;
   out_5112431792018091522[53] = 0;
   out_5112431792018091522[54] = 0;
   out_5112431792018091522[55] = 0;
   out_5112431792018091522[56] = 1;
   out_5112431792018091522[57] = 0;
   out_5112431792018091522[58] = 0;
   out_5112431792018091522[59] = 0;
   out_5112431792018091522[60] = 0;
   out_5112431792018091522[61] = 0;
   out_5112431792018091522[62] = 0;
   out_5112431792018091522[63] = 0;
   out_5112431792018091522[64] = 0;
   out_5112431792018091522[65] = 0;
}
void h_33(double *state, double *unused, double *out_5804146122758019849) {
   out_5804146122758019849[0] = state[16];
   out_5804146122758019849[1] = state[17];
   out_5804146122758019849[2] = state[18];
}
void H_33(double *state, double *unused, double *out_2659925483325217631) {
   out_2659925483325217631[0] = 0;
   out_2659925483325217631[1] = 0;
   out_2659925483325217631[2] = 0;
   out_2659925483325217631[3] = 0;
   out_2659925483325217631[4] = 0;
   out_2659925483325217631[5] = 0;
   out_2659925483325217631[6] = 0;
   out_2659925483325217631[7] = 0;
   out_2659925483325217631[8] = 0;
   out_2659925483325217631[9] = 0;
   out_2659925483325217631[10] = 0;
   out_2659925483325217631[11] = 0;
   out_2659925483325217631[12] = 0;
   out_2659925483325217631[13] = 0;
   out_2659925483325217631[14] = 0;
   out_2659925483325217631[15] = 0;
   out_2659925483325217631[16] = 1;
   out_2659925483325217631[17] = 0;
   out_2659925483325217631[18] = 0;
   out_2659925483325217631[19] = 0;
   out_2659925483325217631[20] = 0;
   out_2659925483325217631[21] = 0;
   out_2659925483325217631[22] = 0;
   out_2659925483325217631[23] = 0;
   out_2659925483325217631[24] = 0;
   out_2659925483325217631[25] = 0;
   out_2659925483325217631[26] = 0;
   out_2659925483325217631[27] = 0;
   out_2659925483325217631[28] = 0;
   out_2659925483325217631[29] = 0;
   out_2659925483325217631[30] = 0;
   out_2659925483325217631[31] = 0;
   out_2659925483325217631[32] = 0;
   out_2659925483325217631[33] = 0;
   out_2659925483325217631[34] = 0;
   out_2659925483325217631[35] = 0;
   out_2659925483325217631[36] = 0;
   out_2659925483325217631[37] = 0;
   out_2659925483325217631[38] = 0;
   out_2659925483325217631[39] = 1;
   out_2659925483325217631[40] = 0;
   out_2659925483325217631[41] = 0;
   out_2659925483325217631[42] = 0;
   out_2659925483325217631[43] = 0;
   out_2659925483325217631[44] = 0;
   out_2659925483325217631[45] = 0;
   out_2659925483325217631[46] = 0;
   out_2659925483325217631[47] = 0;
   out_2659925483325217631[48] = 0;
   out_2659925483325217631[49] = 0;
   out_2659925483325217631[50] = 0;
   out_2659925483325217631[51] = 0;
   out_2659925483325217631[52] = 0;
   out_2659925483325217631[53] = 0;
   out_2659925483325217631[54] = 0;
   out_2659925483325217631[55] = 0;
   out_2659925483325217631[56] = 0;
   out_2659925483325217631[57] = 0;
   out_2659925483325217631[58] = 0;
   out_2659925483325217631[59] = 0;
   out_2659925483325217631[60] = 0;
   out_2659925483325217631[61] = 0;
   out_2659925483325217631[62] = 1;
   out_2659925483325217631[63] = 0;
   out_2659925483325217631[64] = 0;
   out_2659925483325217631[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_4952847842636845307) {
  H(in_vec, out_4952847842636845307);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7174874578269485343) {
  err_fun(nom_x, delta_x, out_7174874578269485343);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_2815856922138082094) {
  inv_err_fun(nom_x, true_x, out_2815856922138082094);
}
void live_H_mod_fun(double *state, double *out_6996944131011363031) {
  H_mod_fun(state, out_6996944131011363031);
}
void live_f_fun(double *state, double dt, double *out_4379143464075805020) {
  f_fun(state,  dt, out_4379143464075805020);
}
void live_F_fun(double *state, double dt, double *out_4126089116567622472) {
  F_fun(state,  dt, out_4126089116567622472);
}
void live_h_4(double *state, double *unused, double *out_7517708438626322194) {
  h_4(state, unused, out_7517708438626322194);
}
void live_H_4(double *state, double *unused, double *out_4871242145388500877) {
  H_4(state, unused, out_4871242145388500877);
}
void live_h_9(double *state, double *unused, double *out_6840173855033849765) {
  h_9(state, unused, out_6840173855033849765);
}
void live_H_9(double *state, double *unused, double *out_5112431792018091522) {
  H_9(state, unused, out_5112431792018091522);
}
void live_h_10(double *state, double *unused, double *out_173744706950380686) {
  h_10(state, unused, out_173744706950380686);
}
void live_H_10(double *state, double *unused, double *out_1457760568505601749) {
  H_10(state, unused, out_1457760568505601749);
}
void live_h_12(double *state, double *unused, double *out_5440948760933695840) {
  h_12(state, unused, out_5440948760933695840);
}
void live_H_12(double *state, double *unused, double *out_8556045520289088944) {
  H_12(state, unused, out_8556045520289088944);
}
void live_h_35(double *state, double *unused, double *out_6215788252178693963) {
  h_35(state, unused, out_6215788252178693963);
}
void live_H_35(double *state, double *unused, double *out_5810482487964075235) {
  H_35(state, unused, out_5810482487964075235);
}
void live_h_32(double *state, double *unused, double *out_7181094678608317786) {
  h_32(state, unused, out_7181094678608317786);
}
void live_H_32(double *state, double *unused, double *out_8295256810012369493) {
  H_32(state, unused, out_8295256810012369493);
}
void live_h_13(double *state, double *unused, double *out_5340487374202210186) {
  h_13(state, unused, out_5340487374202210186);
}
void live_H_13(double *state, double *unused, double *out_7628484752367355419) {
  H_13(state, unused, out_7628484752367355419);
}
void live_h_14(double *state, double *unused, double *out_6840173855033849765) {
  h_14(state, unused, out_6840173855033849765);
}
void live_H_14(double *state, double *unused, double *out_5112431792018091522) {
  H_14(state, unused, out_5112431792018091522);
}
void live_h_33(double *state, double *unused, double *out_5804146122758019849) {
  h_33(state, unused, out_5804146122758019849);
}
void live_H_33(double *state, double *unused, double *out_2659925483325217631) {
  H_33(state, unused, out_2659925483325217631);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
